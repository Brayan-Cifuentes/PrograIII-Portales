package Informes;


import Frames.Plataforma;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import jxl.Workbook;
import jxl.WorkbookSettings;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Brayan Cifuentes
 */
public class Formulario extends javax.swing.JFrame {

    String Base_de_Datos = "jdbc:mysql://35.225.163.187/Nomina_de_Empleados";
    String Usuario = "brayan";
    String Clave = "cifuentes";
    
    String [][] BasedeDatosPlanillaGen;
    int RegistrosPlanillaGen;
    String[] vector= {"id_planillaGen", "id_empleado", "total_percepsion", "total_deduccion", "total_liquido"};
    
    public Formulario() {
        initComponents();
        
        
        Tabla();
        
        Totalizar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   
    public void Tabla() {
        try {

            Connection cn = DriverManager.getConnection(Base_de_Datos, Usuario, Clave);

            PreparedStatement ps = cn.prepareStatement("select * from PlanillaGen");
            PreparedStatement ps2 = cn.prepareStatement("select * from PlanillaGen");
            //pstt4.setString(1, txt_buscar.getText().trim());

            ResultSet rs = ps.executeQuery();

            ResultSet rss = ps2.executeQuery();

            if (rs.next()) {

                DefaultTableModel modelo = new DefaultTableModel();

                modelo.addColumn("id_planillaGen");
                modelo.addColumn("id_empleado");
                modelo.addColumn("total_percepsion");
                modelo.addColumn("total_deduccion");
                modelo.addColumn("total_liquido");

                tbl_detalle.setModel(modelo);

                String[] dato = new String[5];

                while (rss.next()) {
                    dato[0] = rss.getString(1);
                    dato[1] = rss.getString(2);
                    dato[2] = rss.getString(3);
                    dato[3] = rss.getString(4);
                    dato[4] = rss.getString(5);
                    modelo.addRow(dato);

                }
            }

        } catch (Exception e) {

        }
    }
    
    public void Totalizar(){
        double total=0;
        double subtotal=0;
        
        if (tbl_detalle.getRowCount()>0) {
            for (int i = 0; i < tbl_detalle.getRowCount(); i++) {
                subtotal=Double.parseDouble(tbl_detalle.getValueAt(i, 4).toString());
                total+=subtotal;
            }
            lbl_total.setText(" "+total);
        }else
        {
            JOptionPane.showMessageDialog(null, "No existen registros en la BD");
        }
    }
    
    public void GuardarBasedeDatosMatrizEmpleadosPlanillaGen(String Tabla, int CantidadRegistros, String[] Columnas) {
        RegistrosPlanillaGen = CantidadDeRegistros(Tabla);
        BasedeDatosPlanillaGen = new String[RegistrosPlanillaGen+1][CantidadRegistros];
        
        BasedeDatosPlanillaGen[0][0]="Codigo Planilla";
        BasedeDatosPlanillaGen[0][1]="Codigo Empleado";
        BasedeDatosPlanillaGen[0][2]="Total Percepcion";
        BasedeDatosPlanillaGen[0][3]="Total Deduccion";
        BasedeDatosPlanillaGen[0][4]="Total Liquido";
        
        int[] columnas = new int[CantidadRegistros];

        try {

            Connection c = DriverManager.getConnection(Base_de_Datos, Usuario, Clave);
            String query = "select * from " + Tabla;
            PreparedStatement consulta = c.prepareStatement(query);
            ResultSet resultado = consulta.executeQuery();

            for (int i = 0; i < CantidadRegistros; i++) {
                columnas[i] = resultado.findColumn(Columnas[i]);
            }

            int filas = 1;

            while (resultado.next()) {
                for (int i = 0; i < CantidadRegistros; i++) {
                    BasedeDatosPlanillaGen[filas][i] = resultado.getString(columnas[i]);
                }
                filas++;

            }

        } catch (Exception err) {
            err.printStackTrace();
        }

    }

    public int CantidadDeRegistros(String Tabla) {
        int CantidadDeRegistros = 0;
        try {

            Connection c = DriverManager.getConnection(Base_de_Datos, Usuario, Clave);
            String query = "select * from " + Tabla;
            PreparedStatement consulta = c.prepareStatement(query);
            ResultSet resultado = consulta.executeQuery();
            ResultSet AuxParaCantidadRegistros = resultado;

            while (AuxParaCantidadRegistros.next()) {
                CantidadDeRegistros++;
            }
        } catch (Exception e) {

        }
        return CantidadDeRegistros;
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_detalle = new javax.swing.JTable();
        excel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lbl_total = new javax.swing.JLabel();
        btn_regresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Informe Nomina Final del Periodo:");

        tbl_detalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Planilla", "ID Empleado", "Total Percepcion", "Total Deduccion", "Total Liquido"
            }
        ));
        jScrollPane1.setViewportView(tbl_detalle);

        excel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Plataforma/oie_JUZlOV8cmTXU.png"))); // NOI18N
        excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excelActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("TOTAL A PAGAR PLANILLA:");

        lbl_total.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_total.setText("Total");

        btn_regresar.setText("Regresar");
        btn_regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_regresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(excel)
                                .addGap(127, 127, 127)
                                .addComponent(jLabel2)
                                .addGap(56, 56, 56)
                                .addComponent(lbl_total))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 502, Short.MAX_VALUE)
                                .addComponent(btn_regresar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_regresar)))
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lbl_total)
                    .addComponent(excel))
                .addGap(34, 34, 34))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excelActionPerformed
        // TODO add your handling code here:
        //Generar Excel
        GuardarBasedeDatosMatrizEmpleadosPlanillaGen("PlanillaGen", 5, vector);
        
        try {
            String ruta = "Informe_Planilla.xls";
            WorkbookSettings conf = new WorkbookSettings();
            conf.setEncoding("ISO-8859-1");
            WritableWorkbook woorbook = Workbook.createWorkbook(new File(ruta), conf);
            WritableSheet sheet = woorbook.createSheet("RESULTADO", 0);
            WritableFont h = new WritableFont(WritableFont.COURIER, 12, WritableFont.NO_BOLD);
            WritableCellFormat hFormat = new WritableCellFormat(h);

            for (int i = 0; i < BasedeDatosPlanillaGen.length; i++) // filas
            {
                for (int j = 0; j < BasedeDatosPlanillaGen[i].length; j++) // columnas
                {
                    sheet.addCell(new jxl.write.Label(j, i, BasedeDatosPlanillaGen[i][j], hFormat));
                }
            }
            woorbook.write();
            woorbook.close();

        } catch (IOException ex) {
            Logger.getLogger(Plataforma.class.getName()).log(Level.SEVERE, null, ex);

        } catch (WriteException ex) {
            Logger.getLogger(Plataforma.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JOptionPane.showMessageDialog(null, "Excel Generado Correctamente");
    }//GEN-LAST:event_excelActionPerformed

    private void btn_regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_regresarActionPerformed
        // TODO add your handling code here:
        //Totalizar();
        Plataforma p= new Plataforma();
        p.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_regresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_regresar;
    private javax.swing.JButton excel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_total;
    private javax.swing.JTable tbl_detalle;
    // End of variables declaration//GEN-END:variables
}
